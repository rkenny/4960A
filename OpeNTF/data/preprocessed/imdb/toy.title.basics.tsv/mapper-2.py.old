import pickle # for loading pickles
import random # to sort bundle-user into train/test

Verbose = True
testSetSize = 40 # % of bundle/user pairs that go into the test set
indexes = pickle.load(open("indexes.pkl", "rb"))
teamsVecs = pickle.load(open("teamsvecs.pkl", "rb"))

userItemFilename = "user_item.map"
bundleItemFilename = "bundle_item.map"
userBundleTrainFilename = "user_bundle_train.map"
userBundleTestFilename = "user_bundle_test.map"

userItemFile = open(userItemFilename, "w")
bundleItemFile = open(bundleItemFilename, "w")
bundleUserTrainFile = open(bundleUserTrainFilename, "w")
bundleUserTestFile = open(bundleUserTestFilename, "w")


for bundleId in [(bundleId, str(bundleId)) for bundleId in indexes["i2t"].keys()] : # movieId to bundle
    print("checking bundleId " + bundleId[1] + " actual title: " + str(indexes["i2t"][bundleId[0]])) if Verbose else None
    userIds = teamsVecs["skill"][bundleId[0]].rows[0] # genre as user for imdb
    itemIds = teamsVecs["member"][bundleId[0]].rows[0] # crew as item for imdb
    for itemId in [(itemId, str(itemId)) for itemId in itemIds]:
        for userId in [(userId, str(userId)) for userId in userIds]:
            print(" [" + indexes["i2s"][userId[0]] + "] for [" +indexes["i2c"][itemId[0]]+ "] as ", end="") if Verbose else None
            # print(userId[1] + " " + itemId[1])
            userItemFile.write(userId[1] + " " + itemId[1])
            print(" [" + indexes["i2s"][userId[0]] + "] for [" +str(indexes["i2t"][bundleId[0]])+ "] as ", end="") if Verbose else None
            print(userId[1] + " " + bundleId[1]) # this is the train/test set
            
        print(" [" + str(indexes["i2t"][bundleId[0]]) +"] has crew " + indexes["i2c"][bundleId[0]] + " as ", end="") if Verbose else None
        print(bundleId[1] + " " + userId[1])
        